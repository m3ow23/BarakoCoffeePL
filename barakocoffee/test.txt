LEXEMES                                    TOKENS

publiko                                    PUBLIKO_KEYWORD
class                                      CLASS_KEYWORD
SampleClass                                IDENTIFIER
{                                          OPEN_CURLY_DELIMITER
final                                      FINAL_KEYWORD
integer                                    INT_KEYWORD
count                                      CONSTANT
=                                          ASSIGNMENT_OPERATOR
0                                          NUMBER_LITERAL
;                                          SEMICOLON_DELIMITER
int                                        INT_KEYWORD
a                                          IDENTIFIER
=                                          ASSIGNMENT_OPERATOR
10                                         NUMBER_LITERAL
;                                          SEMICOLON_DELIMITER
final                                      FINAL_KEYWORD
string                                     STRING_KEYWORD
section                                    CONSTANT
=                                          ASSIGNMENT_OPERATOR
"BSCS 3-3"                                 STRING_LITERAL
;                                          SEMICOLON_DELIMITER
pinal                                      PINAL_KEYWORD
float                                      FLOAT_KEYWORD
pi                                         CONSTANT
=                                          ASSIGNMENT_OPERATOR
3.1416                                     FLOAT_LITERAL
;                                          SEMICOLON_DELIMITER
pinal                                      PINAL_KEYWORD
boolean                                    BOOLEAN_KEYWORD
trigger                                    CONSTANT
=                                          ASSIGNMENT_OPERATOR
tama                                       TAMA_BOOLEAN_LITERAL
;                                          SEMICOLON_DELIMITER
public                                     PUBLIC_KEYWORD
estatika                                   ESTATIKA_KEYWORD
void                                       VOID_KEYWORD
main                                       RESERVED_WORD
(                                          OPEN_PARENTHESIS_DELIMITER
)                                          CLOSE_PARENTHESIS_DELIMITER
{                                          OPEN_CURLY_DELIMITER
print                                      PRINT_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
(                                          OPEN_PARENTHESIS_DELIMITER
count                                      IDENTIFIER
+                                          ADDITION_OPERATOR
a                                          IDENTIFIER
)                                          CLOSE_PARENTHESIS_DELIMITER
+                                          ADDITION_OPERATOR
section                                    IDENTIFIER
)                                          CLOSE_PARENTHESIS_DELIMITER
;                                          SEMICOLON_DELIMITER
}                                          CLOSE_CURLY_DELIMITER
public                                     PUBLIC_KEYWORD
void                                       VOID_KEYWORD
if                                         RESERVED_WORD
(                                          OPEN_PARENTHESIS_DELIMITER
)                                          CLOSE_PARENTHESIS_DELIMITER
{                                          OPEN_CURLY_DELIMITER
if                                         IF_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
pi                                         IDENTIFIER
>                                          GREATER_OPERATOR
10                                         NUMBER_LITERAL
)                                          CLOSE_PARENTHESIS_DELIMITER
{                                          OPEN_CURLY_DELIMITER
print                                      PRINT_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
10                                         NUMBER_LITERAL
/                                          DIVISION_OPERATOR
50                                         NUMBER_LITERAL
*                                          MULTIPLICATION_OPERATOR
40                                         NUMBER_LITERAL
)                                          CLOSE_PARENTHESIS_DELIMITER
;                                          SEMICOLON_DELIMITER
count                                      IDENTIFIER
++                                         INCREMENT_OPERATOR
;                                          SEMICOLON_DELIMITER
}                                          CLOSE_CURLY_DELIMITER
else                                       ELSE_KEYWORD
{                                          OPEN_CURLY_DELIMITER
print                                      PRINT_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
(                                          OPEN_PARENTHESIS_DELIMITER
50                                         NUMBER_LITERAL
%                                          MODULO_OPERATOR
10                                         NUMBER_LITERAL
)                                          CLOSE_PARENTHESIS_DELIMITER
^                                          EXPONENT_OPERATOR
5                                          NUMBER_LITERAL
+                                          ADDITION_OPERATOR
3                                          NUMBER_LITERAL
)                                          CLOSE_PARENTHESIS_DELIMITER
;                                          SEMICOLON_DELIMITER
count                                      IDENTIFIER
--                                         DECREMENT_OPERATOR
;                                          SEMICOLON_DELIMITER
}                                          CLOSE_CURLY_DELIMITER
}                                          CLOSE_CURLY_DELIMITER
pribado                                    PRIBADO_KEYWORD
int                                        INT_KEYWORD
checkPi                                    IDENTIFIER
(                                          OPEN_PARENTHESIS_DELIMITER
float                                      FLOAT_KEYWORD
value                                      IDENTIFIER
)                                          CLOSE_PARENTHESIS_DELIMITER
{                                          OPEN_CURLY_DELIMITER
if                                         IF_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
value                                      IDENTIFIER
>                                          GREATER_OPERATOR
pi                                         IDENTIFIER
)                                          CLOSE_PARENTHESIS_DELIMITER
{                                          OPEN_CURLY_DELIMITER
printf                                     PRINT_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
"value is greater than pi"                 STRING_LITERAL
)                                          CLOSE_PARENTHESIS_DELIMITER
;                                          SEMICOLON_DELIMITER
}                                          CLOSE_CURLY_DELIMITER
else                                       ELSE_KEYWORD
if                                         IF_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
value                                      IDENTIFIER
>=                                         GREATER_EQUAL_OPERATOR
pi                                         IDENTIFIER
)                                          CLOSE_PARENTHESIS_DELIMITER
{                                          OPEN_CURLY_DELIMITER
printf                                     PRINT_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
"value is greater than or equal to pi"     STRING_LITERAL
)                                          CLOSE_PARENTHESIS_DELIMITER
;                                          SEMICOLON_DELIMITER
}                                          CLOSE_CURLY_DELIMITER
else                                       ELSE_KEYWORD
if                                         IF_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
value                                      IDENTIFIER
<                                          LESS_OPERATOR
pi                                         IDENTIFIER
)                                          CLOSE_PARENTHESIS_DELIMITER
{                                          OPEN_CURLY_DELIMITER
labas                                      LABAS_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
"value is less than pi"                    STRING_LITERAL
)                                          CLOSE_PARENTHESIS_DELIMITER
;                                          SEMICOLON_DELIMITER
}                                          CLOSE_CURLY_DELIMITER
else                                       ELSE_KEYWORD
if                                         IF_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
value                                      IDENTIFIER
<=                                         LESS_EQUAL_OPERATOR
pi                                         IDENTIFIER
)                                          CLOSE_PARENTHESIS_DELIMITER
{                                          OPEN_CURLY_DELIMITER
labasf                                     LABAS_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
"value is less than or equal to pi"        STRING_LITERAL
)                                          CLOSE_PARENTHESIS_DELIMITER
;                                          SEMICOLON_DELIMITER
}                                          CLOSE_CURLY_DELIMITER
else                                       ELSE_KEYWORD
if                                         IF_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
value                                      IDENTIFIER
==                                         EQUAL_OPERATOR
pi                                         IDENTIFIER
)                                          CLOSE_PARENTHESIS_DELIMITER
{                                          OPEN_CURLY_DELIMITER
print                                      PRINT_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
"value is equal to pi"                     STRING_LITERAL
)                                          CLOSE_PARENTHESIS_DELIMITER
;                                          SEMICOLON_DELIMITER
}                                          CLOSE_CURLY_DELIMITER
else                                       ELSE_KEYWORD
if                                         IF_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
value                                      IDENTIFIER
!=                                         NOT_EQUAL_OPERATOR
pi                                         IDENTIFIER
)                                          CLOSE_PARENTHESIS_DELIMITER
{                                          OPEN_CURLY_DELIMITER
print                                      PRINT_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
"value is not equal to pi"                 STRING_LITERAL
)                                          CLOSE_PARENTHESIS_DELIMITER
;                                          SEMICOLON_DELIMITER
}                                          CLOSE_CURLY_DELIMITER
if                                         IF_KEYWORD
(                                          OPEN_PARENTHESIS_DELIMITER
(                                          OPEN_PARENTHESIS_DELIMITER
count                                      IDENTIFIER
>                                          GREATER_OPERATOR
a                                          IDENTIFIER
||                                         OR_OPERATOR
count                                      IDENTIFIER
==                                         EQUAL_OPERATOR
10                                         NUMBER_LITERAL
)                                          CLOSE_PARENTHESIS_DELIMITER
&&                                         AND_OPERATOR
trigger                                    IDENTIFIER
==                                         EQUAL_OPERATOR
tama                                       TAMA_BOOLEAN_LITERAL
)                                          CLOSE_PARENTHESIS_DELIMITER
;                                          SEMICOLON_DELIMITER
}                                          CLOSE_CURLY_DELIMITER
}                                          CLOSE_CURLY_DELIMITER
